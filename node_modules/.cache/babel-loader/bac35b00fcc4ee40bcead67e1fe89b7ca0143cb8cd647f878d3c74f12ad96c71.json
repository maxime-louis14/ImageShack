{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Moi\\\\Documents\\\\GitHub\\\\projet_pas_fou_react.js\\\\src\\\\pages\\\\Photos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"../pages/style/photo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Photos = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [isUploaded, setIsUploaded] = useState(false);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n      console.log(acceptedFiles);\n    }\n  });\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        alt: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n  const [imageSent, setImageSent] = useState([]);\n  const handleFile = e => {\n    console.log(e);\n    setImageSent(e.target.files[0]);\n  };\n  const uploadFiles = () => {\n    const formData = new FormData();\n    console.log(files[0]);\n    formData.append(\"image\", files[0]);\n    const token = localStorage.getItem(\"token\");\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: formData\n    };\n    fetch(\"http://localhost:3000/images\", requestOptions).then(response => {\n      if (response.ok) {\n        console.log(\"Image uploaded successfully\");\n      } else {\n        throw new Error(\"Failed to upload image\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Photo\",\n    children: !isUploaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps({\n          className: \"dropzone\"\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps({\n            onChange: handleFile\n          }),\n          name: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: thumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-btn\",\n        onClick: () => uploadFiles(),\n        children: \"Upload Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Photos, \"FBa0tFsV7w5N0TRhCVQQvE1zmQQ=\", false, function () {\n  return [useDropzone];\n});\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["React","useEffect","useState","useDropzone","jsxDEV","_jsxDEV","Fragment","_Fragment","Photos","_s","files","setFiles","isUploaded","setIsUploaded","getRootProps","getInputProps","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","console","log","thumbs","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","imageSent","setImageSent","handleFile","e","target","uploadFiles","formData","FormData","append","token","localStorage","getItem","requestOptions","method","headers","Authorization","body","fetch","then","response","ok","Error","catch","error","className","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Moi/Documents/GitHub/projet_pas_fou_react.js/src/pages/Photos.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"../pages/style/photo.css\";\r\n\r\nconst Photos = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [isUploaded, setIsUploaded] = useState(false)\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop: acceptedFiles => {\r\n      setFiles(\r\n        acceptedFiles.map(file =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      );\r\n      console.log(acceptedFiles);\r\n    }\r\n  });\r\n\r\n  const thumbs = files.map(file =>\r\n    <div key={file.name}>\r\n      <div>\r\n        <img src={file.preview} alt=\"Preview\" />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [imageSent, setImageSent] = useState([]);\r\n  const handleFile = e => {\r\n    console.log(e);\r\n    setImageSent(e.target.files[0]);\r\n  };\r\n  \r\n  const uploadFiles = () => {\r\n    const formData = new FormData();\r\n    console.log(files[0]);\r\n    formData.append(\"image\", files[0]);\r\n    const token = localStorage.getItem(\"token\");\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n      body: formData\r\n    };\r\n    \r\n    fetch(\"http://localhost:3000/images\", requestOptions)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log(\"Image uploaded successfully\");\r\n        } else {\r\n          throw new Error(\"Failed to upload image\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Photo\">\r\n      {!isUploaded && (<>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps({ onChange: handleFile })} name=\"image\" />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <aside>\r\n        {thumbs}\r\n      </aside>\r\n\r\n      <button className=\"upload-btn\" onClick={() => uploadFiles()}>\r\n        Upload Images\r\n      </button>\r\n      </>)}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}